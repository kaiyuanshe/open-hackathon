using Kaiyuanshe.OpenHackathon.Server.Models.Validations;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace Kaiyuanshe.OpenHackathon.Server.Models
{
    /// <summary>
    /// Template to setup virtual experiment on Kubernetes. Not required.
    /// </summary>
    public class Template : ModelBase
    {
        /// <summary>
        /// name of hackathon
        /// </summary>
        /// <example>foo</example>
        public string hackathonName { get; internal set; }

        /// <summary>
        /// name of template. Auto-generated by hackathon server.
        /// </summary>
        /// <example>foo</example>
        public string name { get; internal set; }

        /// <summary>
        /// Container image.
        /// </summary>
        /// <example>jenkins/jenkins:lts</example>
        [MaxLength(128)]
        [Required]
        public string image { get; set; }

        /// <summary>
        /// commands to start a container.
        /// </summary>
        /// <example>[ "bash", "-c", "vncserver :1 -localhost no -geometry 1920*1080 -depth 24" ]</example>
        [Required]
        [MinLength(1)]
        public string[] commands { get; set; }

        /// <summary>
        /// environment variables passed to the container.
        /// </summary>
        /// <example>{ "FOO": "bar" }</example>
        [EnvironmentVariables]
        public Dictionary<string, string> environmentVariables { get; set; }

        /// <summary>
        /// protocol for remote connection
        /// </summary>
        /// <example>vnc</example>
        [Required]
        public string ingressProtocol { get; set; }

        /// <summary>
        /// Port for remote connection
        /// </summary>
        /// <example>5901</example>
        [Required]
        [Range(1, 65535)]
        public int ingressPort { get; set; }

        /// <summary>
        /// login user name for remote connection. lowercase chars and numbers only: ^[a-z][a-z0-9]{1, 63}$
        /// </summary>
        /// <example>johndoe</example>
        [RegularExpression("^[a-z][a-z0-9]{1, 63}$")]
        public string userName { get; set; }
    }
}
